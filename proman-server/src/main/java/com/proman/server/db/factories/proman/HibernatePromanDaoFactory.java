package com.proman.server.db.factories.proman;

import org.springframework.beans.BeansException;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.stereotype.Component;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.BeanNameAware;

import com.proman.server.db.model.dao.proman.*;

/** 
 * DAO factory implementation.
 * @author autogenerated
 */
@Component
public class HibernatePromanDaoFactory implements ApplicationContextAware, BeanNameAware {
	/** Placeholder for an instance. */
	private static HibernatePromanDaoFactory instance;
	/** Internal state. */
	private static ApplicationContext context = null;
	/** Bean Name. */
	private static String beanName;

	/** Return an instance of this class.
	 * @return an instance of this class
	 */
	public static synchronized HibernatePromanDaoFactory getInstance() {
		if (instance == null) {
			instance = (HibernatePromanDaoFactory) context.getBean(beanName);
		}
		return instance;
	}

	/**
	 * Sets a Spring Application Context object.
  	 * @param ctxt ApplicationContext to set
	 * @throws BeansException on spring error
	 */
	@Autowired
	public void setApplicationContext(ApplicationContext ctxt)
			throws BeansException 
	{
		context = ctxt;
	}

	/**
	* 
	* {@inheritDoc}
	* 
	* @see org.springframework.beans.factory.BeanNameAware#setBeanName(java.lang.String)
	*/
	public void setBeanName(String name) {
		beanName = name;
	}

	/**
	 * Return the requested bean from the context, throwing a RuntimeException on error.
	 *
	 * @param beanName to return
	 * @return the bean requested.
	 */
	public static Object getBean(String beanName) {
		Object result = context.getBean(beanName);
		if (result == null) { 
			throw new IllegalStateException(String.format("Could not find bean '%s'. Did you set the right component scanning?", beanName));
		} 
		
		return result;
	}

	
	/**
	 * Returns a InstitutionDao instance.
	 * 
	 * @return a InstitutionDao instance
	 */
	public static InstitutionDao getInstitutionDao() {
		return (InstitutionDao) getBean("institutionDaoImpl"); 
	}
	/**
	 * Returns a SchemaVersionDao instance.
	 * 
	 * @return a SchemaVersionDao instance
	 */
	public static SchemaVersionDao getSchemaVersionDao() {
		return (SchemaVersionDao) getBean("schemaVersionDaoImpl"); 
	}
	/**
	 * Returns a StudentDao instance.
	 * 
	 * @return a StudentDao instance
	 */
	public static StudentDao getStudentDao() {
		return (StudentDao) getBean("studentDaoImpl"); 
	}
	/**
	 * Returns a StudentGradesDao instance.
	 * 
	 * @return a StudentGradesDao instance
	 */
	public static StudentGradesDao getStudentGradesDao() {
		return (StudentGradesDao) getBean("studentGradesDaoImpl"); 
	}
	/**
	 * Returns a TeamDao instance.
	 * 
	 * @return a TeamDao instance
	 */
	public static TeamDao getTeamDao() {
		return (TeamDao) getBean("teamDaoImpl"); 
	}
	/**
	 * Returns a TeamManagerDao instance.
	 * 
	 * @return a TeamManagerDao instance
	 */
	public static TeamManagerDao getTeamManagerDao() {
		return (TeamManagerDao) getBean("teamManagerDaoImpl"); 
	}
	/**
	 * Returns a TeamManagerMapDao instance.
	 * 
	 * @return a TeamManagerMapDao instance
	 */
	public static TeamManagerMapDao getTeamManagerMapDao() {
		return (TeamManagerMapDao) getBean("teamManagerMapDaoImpl"); 
	}
	/**
	 * Returns a TeamStudentDao instance.
	 * 
	 * @return a TeamStudentDao instance
	 */
	public static TeamStudentDao getTeamStudentDao() {
		return (TeamStudentDao) getBean("teamStudentDaoImpl"); 
	}
	/**
	 * Returns a UserDetailsDao instance.
	 * 
	 * @return a UserDetailsDao instance
	 */
	public static UserDetailsDao getUserDetailsDao() {
		return (UserDetailsDao) getBean("userDetailsDaoImpl"); 
	}
	/**
	 * Returns a UserRolesDao instance.
	 * 
	 * @return a UserRolesDao instance
	 */
	public static UserRolesDao getUserRolesDao() {
		return (UserRolesDao) getBean("userRolesDaoImpl"); 
	}
	/**
	 * Returns a UsersDao instance.
	 * 
	 * @return a UsersDao instance
	 */
	public static UsersDao getUsersDao() {
		return (UsersDao) getBean("usersDaoImpl"); 
	}

}
